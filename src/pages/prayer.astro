---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Jadwal Sholat">
  <!-- Hero Section -->
  <section class="relative h-[300px] flex items-center justify-center text-white">
    <img
      src="https://picsum.photos/id/122/4147/2756"
      alt="Masjid"
      class="absolute inset-0 w-full h-full object-cover"
    />
    <div class="absolute inset-0 bg-black bg-opacity-50"></div>
    <div class="relative text-center">
      <h1 class="text-4xl font-bold mb-4">Jadwal Sholat</h1>
      <p class="text-lg">Jadwal sholat untuk hari ini di berbagai kota.</p>
    </div>
  </section>

  <!-- Pemilihan Kota Section -->
  <section class="container mx-auto py-16 px-4">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-3xl font-bold text-primary mb-8">Pilih Kota</h2>
      <div class="flex flex-col md:flex-row gap-4">
        <select id="city-select" class="w-full md:w-64 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
          <option value="Jakarta">Jakarta</option>
          <option value="Bandung">Bandung</option>
          <option value="Surabaya" selected>Surabaya</option>
          <option value="Yogyakarta">Yogyakarta</option>
          <option value="Medan">Medan</option>
        </select>
        <button
          id="load-prayer-times"
          class="bg-primary text-white px-6 py-2 rounded-lg hover:bg-opacity-90 transition duration-300"
        >
          Muat Jadwal
        </button>
      </div>
    </div>
  </section>

  <!-- Tabel Jadwal Sholat Section -->
  <section class="container mx-auto py-16 px-4">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-3xl font-bold text-primary mb-8">Jadwal Sholat Hari Ini</h2>
      <p id="date-info" class="text-lg mb-4"></p>
      <div id="prayer-times" class="bg-white rounded-lg shadow-lg p-6 overflow-x-auto">
        <table class="w-full text-left">
          <thead>
            <tr class="border-b">
              <th class="py-2">Sholat</th>
              <th class="py-2">Waktu</th>
            </tr>
          </thead>
          <tbody id="prayer-times-body">
            <tr>
              <td colspan="2" class="text-center py-4">Memuat jadwal sholat...</td>
            </tr>
          </tbody>
        </table>
      </div>
      <p id="countdown" class="text-center text-lg mt-4"></p>
    </div>
  </section>

  <!-- Script untuk Fetch API dan fitur tambahan -->
  <script>
    async function fetchPrayerTimes(city: string, country: string) {
      const response = await fetch(`https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=2`);
      const data = await response.json();
      return data.data;
    }

    function displayPrayerTimes(data: { timings: { [key: string]: string }, date: { readable: string }, meta: { timezone: string } }) {
      const prayerTimesBody = document.getElementById("prayer-times-body");
      const dateInfo = document.getElementById("date-info");
      const countdownElement = document.getElementById("countdown");
      const timings = data.timings;
      const readableDate = data.date.readable;
      const timezone = data.meta.timezone;

      if (dateInfo) {
        dateInfo.innerText = `Hari ini: ${readableDate} (${timezone})`;
      }

      const prayers = [
        { name: "Imsak", apiKey: "Imsak" },
        { name: "Shubuh", apiKey: "Fajr" },
        { name: "Terbit Matahari", apiKey: "Sunrise" },
        { name: "Dhuha", apiKey: "Dhuha" },
        { name: "Dzuhur", apiKey: "Dhuhr" },
        { name: "Ashar", apiKey: "Asr" },
        { name: "Maghrib", apiKey: "Maghrib" },
        { name: "Isya", apiKey: "Isha" }
      ];

      const now = new Date();
      let nextPrayer = null;
      let nextPrayerTime = null;

      if (!timings) {
        prayerTimesBody.innerHTML = `
          <tr>
            <td colspan="2" class="text-center py-4 text-red-500">Gagal memuat jadwal sholat. Data tidak valid.</td>
          </tr>
        `;
        return;
      }

      const rows = prayers.map(prayer => {
        const prayerTimeStr = timings[prayer.apiKey];
        if (!prayerTimeStr) {
          return `
            <tr class="border-b">
              <td class="py-2">${prayer.name}</td>
              <td class="py-2 text-red-500">Tidak tersedia</td>
            </tr>
          `;
        }
        const [hours, minutes] = prayerTimeStr.split(":").map(Number);
        
        // Buat Date object berdasarkan zona waktu
        const prayerDate = new Date();
        prayerDate.setHours(hours, minutes, 0, 0);

        if (!nextPrayer && prayerDate > now) {
          nextPrayer = prayer.name;
          nextPrayerTime = prayerDate;
        }

        return `
          <tr class="border-b ${nextPrayer === prayer.name ? 'bg-yellow-100' : ''}">
            <td class="py-2">${prayer.name}</td>
            <td class="py-2">${prayerTimeStr}</td>
          </tr>
        `;
      }).join("");

      if (prayerTimesBody) {
        prayerTimesBody.innerHTML = rows;
      }

      if (nextPrayer && nextPrayerTime) {
        updateCountdown(nextPrayer, nextPrayerTime);
      }
    }

    let countdownInterval;
    
    function updateCountdown(prayer, prayerTime) {
      const countdownElement = document.getElementById("countdown");
      
      if (countdownInterval) clearInterval(countdownInterval); // Hentikan interval sebelumnya

      countdownInterval = setInterval(() => {
        const now = new Date();
        const timeDiff = prayerTime - now;

        if (timeDiff > 0) {
          const hours = Math.floor(timeDiff / 3600000);
          const minutes = Math.floor((timeDiff % 3600000) / 60000);
          const seconds = Math.floor((timeDiff % 60000) / 1000);
          if (countdownElement) {
            countdownElement.innerText = `Waktu sholat berikutnya (${prayer}) dalam ${hours} jam ${minutes} menit ${seconds} detik`;
          }
        } else {
          if (countdownElement) {
            countdownElement.innerText = "Saatnya sholat!";
          }
          clearInterval(countdownInterval);
        }
      }, 1000);
    }

    document.addEventListener("DOMContentLoaded", async () => {
      const citySelect = document.getElementById("city-select");
      const loadPrayerTimesButton = document.getElementById("load-prayer-times");
      const defaultCity = "Surabaya";
      const country = "Indonesia";

      try {
        const data = await fetchPrayerTimes(defaultCity, country);
        displayPrayerTimes(data);
      } catch (error) {
        console.error("Gagal mengambil jadwal sholat:", error);
        if (document.getElementById("prayer-times-body")) {
          document.getElementById("prayer-times-body").innerHTML = `
            <tr>
              <td colspan="2" class="text-center py-4 text-red-500">Gagal memuat jadwal sholat. Silakan coba lagi.</td>
            </tr>
          `;
        }
      }

      if (loadPrayerTimesButton) {
        loadPrayerTimesButton.addEventListener("click", async () => {
          try {
            if (citySelect) {
              const data = await fetchPrayerTimes(citySelect.value, country);
              displayPrayerTimes(data);
            } else {
              console.error("City select element not found.");
            }
          } catch (error) {
            console.error("Gagal mengambil jadwal sholat:", error);
            if (document.getElementById("prayer-times-body")) {
              document.getElementById("prayer-times-body").innerHTML = `
                <tr>
                  <td colspan="2" class="text-center py-4 text-red-500">Gagal memuat jadwal sholat. Silakan coba lagi.</td>
                </tr>
              `;
            }
          }
        });
      }
    });
  </script>
</BaseLayout>